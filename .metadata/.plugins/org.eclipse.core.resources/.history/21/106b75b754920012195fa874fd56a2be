package databaseOps;

import java.lang.reflect.Field;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import models.IDbModel;

public class Select<T extends IDbModel> extends DatabaseOp<T>{

	protected Select(T table) throws IllegalArgumentException,
			IllegalAccessException, InstantiationException {
		super(table);
	}
	
	public static <T extends IDbModel> Select<T> from(T table) throws IllegalArgumentException, IllegalAccessException, InstantiationException{
		return new Select<T>(table);
	}

	@Override
	public QueryResult execute(Statement stmt) throws Exception {
		sql = "select * from "+tableName+" "+whereStr;
		
		
		
		//save results
		QueryResult result = new QueryResult();
		result.sql = sql;
		stmt.execute(sql);
		result.stmt = stmt;
		IDbModel test = saveResults(stmt);
		result.stmt = stmt;
		return result;
	}

	private T saveResults(Statement stmt) throws SQLException, IllegalArgumentException, IllegalAccessException, InstantiationException{
		T  ret = (T) table.getClass().newInstance();
		ResultSet rest = stmt.getResultSet();
		rest.next();
		for (Field f : fields){
			String name = f.getName();
			String val = rest.getString(name);
			f.set(ret, val);
		}
		return ret;
	}
}
