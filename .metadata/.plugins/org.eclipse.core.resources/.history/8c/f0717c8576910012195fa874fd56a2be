package databaseOps;

import java.lang.reflect.Field;
import java.sql.*;
import java.util.Collection;
import java.util.TreeMap;

import models.IDbModel;

public abstract class DatabaseOp {
	private IDbModel table;
	private String stmt;
	private Statement sql;
	private Field[] fields;
	private Class<? extends IDbModel> entity;
	private TreeMap<String, String> values;
	
	private Insert(Statement sql, IDbModel table) throws IllegalArgumentException, IllegalAccessException{
		this.sql = sql;
		this.table = table;
		entity = table.getClass();
		fields = entity.getFields();
		values = new  TreeMap<String, String>();
		for (Field field : fields){
			String name = field.getName();
			Object value = field.get(entity);
			values.put(name, value.toString());
		}
	}
	
	public Collection<String> columns() {
		return values.keySet();
	}

	public Collection<String> values() {
		return values.values();
	}
	
	private void removeLastComma(){
		// Remove last comma
		stmt = stmt.substring(0, stmt.length());
	}
	
	public abstract ResultSet execute() throws SQLException;
}
