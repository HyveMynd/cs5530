package cs5530;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;

import databaseOps.Insert;
import databaseOps.OP;
import databaseOps.Select;

import models.Orders;
import models.PlaceOrder;
import models.Video;

public class OrderOperations {

	public String orderVideos(Statement stmt, String id, String[] videos,
			String ccNum) throws Exception {
		
		// Map representing video, quantity
		HashMap<String, String> selections = new HashMap<String, String>();
		
		for (String video : videos){
			String[] selection = video.split(",");
			selections.put(selection[0], selection[1]);
		}
		Video video = new Video();
		double total = 0;
		
		//Add up the prices
		for (String isbn : selections.keySet()){
			Collection<Video> vid = Select.from(video)
					.where("ISBN", OP.Equal, isbn)
					.execute(stmt).queryResults;
			String p = vid.iterator().next().Price;
			total += Double.parseDouble(p);
		}
		
		// Insert a new Order
		Orders order = new Orders();
		order.CreditCardNumber = ccNum;
		order.PriceTotal = Double.toString(total);
		ResultSet autoKeys = Insert.from(order).execute(stmt).autoGeneratedKeys;
		autoKeys.next();
		String oid = autoKeys.getString("ID");
		
		// Insert to PlaceOrder
		Calendar dateTime = Calendar.getInstance();
		for (String isbn : selections.keySet()){
			PlaceOrder newOrder = new PlaceOrder();
			newOrder.cid = id;
			newOrder.ISBN = isbn;
			newOrder.OrderDate = dateTime.toString();
			newOrder.VideoCount = selections.get(isbn);
			newOrder.oid = oid;
			
			Insert.from(newOrder).execute(stmt);
		}
		
		return "Order Successful!";
	}

}
