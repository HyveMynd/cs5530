package cs5530;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Collection;
import java.util.HashMap;

import models.Customer;
import models.Feedback;
import models.IDbModel;
import models.PlaceOrder;
import models.Rates;
import models.Trusted;
import databaseOps.Insert;
import databaseOps.OP;
import databaseOps.QueryResult;
import databaseOps.Select;

public class CustomerOperations {
	
	public String registerUser(Statement stmt, Customer customer) throws Exception{
		String query = "";
		String resultstr="";
		QueryResult<Customer> result;
		ResultSet autoKeys;
				
		try{
			result = Insert.from(customer).execute(stmt);
			autoKeys = result.autoGeneratedKeys;
			query = result.sql;
        } catch(Exception e) {
			System.err.println("Unable to execute query: "+ query);
	                System.err.println(e.getMessage());
			throw(e);
		}
		System.out.println("Register:registerUser query="+query+"\n");
		resultstr = "Successful Register. Auto-Gen Keys: "+autoKeys;
		return resultstr;
	}
	
	public String userRecord(Statement stmt, String id) throws Exception{
		String query  = "";
		String resultstr = "";
		Customer custInfo;
		Collection<PlaceOrder> placeOrderInfo;
		Collection<Feedback> feedbackInfo;
		Collection<Rates> ratesInfo;
		Collection<Trusted> trustedInfo;
		HashMap<String, Collection<IDbModel>> results = new HashMap<String, Collection<IDbModel>>;
		try{
			custInfo = getCustomer(stmt, id);
			placeOrderInfo = OrderOperations.getPlaceOrdersForCustomer(stmt, id);
			feedbackInfo = FeedbackOperations.getFeedbackForCustomer(stmt, id);
			ratesInfo = FeedbackOperations.getRatesForCustomer(stmt, id);
			trustedInfo = FeedbackOperations.getTrustedForCustomer(stmt, id);
		}
		catch(Exception e){
            System.err.println(e.getMessage());
            throw(e);
		}
	}
	
	public static Customer getCustomer(Statement stmt, String id) throws Exception{
		try{
			return Select.from(new Customer())
					.where("ID", OP.Equal, id)
					.execute(stmt).queryResults
					.iterator().next();
		}
		catch(Exception e){
            System.err.println(e.getMessage());
            throw(e);
		}
	}
	
	public static Collection<Customer> getCustomers(Statement stmt) throws Exception{
		try{
			return Select.from(new Customer())
					.execute(stmt).queryResults;
		}
		catch(Exception e){
            System.err.println(e.getMessage());
            throw(e);
		}
	}
}
